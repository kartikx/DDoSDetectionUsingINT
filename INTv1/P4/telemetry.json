{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 1, false],
        ["switchInfoTableKey_0", 1, false],
        ["tmp_0", 12, false],
        ["tmp_1", 16, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["transitProcessingInstance_numHeaders", 16, false],
        ["sourceProcessingInstance_hasReturned", 1, false],
        ["transitProcessingInstance_hasReturned", 1, false],
        ["sinkProcessingInstance_hasReturned", 1, false],
        ["userMetadata._parser_metadata_numHeadersRemaining0", 16, false],
        ["userMetadata._switch_metadata_switchId1", 4, false],
        ["userMetadata._switch_metadata_switchINTRole2", 2, false],
        ["userMetadata._sink_metadata_ingress_global_timestamp3", 32, false],
        ["_padding_0", 1, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "ipv4_option_t",
      "id" : 4,
      "fields" : [
        ["copied", 1, false],
        ["class", 2, false],
        ["option", 5, false],
        ["length", 8, false]
      ]
    },
    {
      "name" : "int_md_t",
      "id" : 5,
      "fields" : [
        ["countHeaders", 16, false],
        ["sourceIngressTime", 32, false],
        ["sinkIngressTime", 32, false]
      ]
    },
    {
      "name" : "int_data_t",
      "id" : 6,
      "fields" : [
        ["switchId", 4, false],
        ["queueDepth", 12, false],
        ["queueTime", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4_option",
      "id" : 4,
      "header_type" : "ipv4_option_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_md",
      "id" : 5,
      "header_type" : "int_md_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_data[0]",
      "id" : 6,
      "header_type" : "int_data_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_data[1]",
      "id" : 7,
      "header_type" : "int_data_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_data[2]",
      "id" : 8,
      "header_type" : "int_data_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_data[3]",
      "id" : 9,
      "header_type" : "int_data_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [
    {
      "name" : "int_data",
      "id" : 0,
      "header_type" : "int_data_t",
      "size" : 4,
      "header_ids" : [6, 7, 8, 9]
    }
  ],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "fl",
      "source_info" : {
        "filename" : "P4/telemetry.p4",
        "line" : 78,
        "column" : 49,
        "source_fragment" : "meta"
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._parser_metadata_numHeadersRemaining0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._sink_metadata_ingress_global_timestamp3"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6],
    ["IPHeaderWithoutOptions", 7]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "b2d",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "ihl"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x05"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "expression",
                  "value" : {
                    "op" : "d2b",
                    "left" : null,
                    "right" : {
                      "type" : "field",
                      "value" : ["scalars", "tmp"]
                    }
                  }
                },
                {
                  "type" : "hexstr",
                  "value" : "0x7"
                }
              ],
              "op" : "verify"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x05",
              "mask" : null,
              "next_state" : null
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ipv4_option"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            }
          ]
        },
        {
          "name" : "parse_ipv4_option",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4_option"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x1f",
              "mask" : null,
              "next_state" : "parse_int"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "option"]
            }
          ]
        },
        {
          "name" : "parse_int",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "int_md"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._parser_metadata_numHeadersRemaining0"]
                },
                {
                  "type" : "field",
                  "value" : ["int_md", "countHeaders"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0000",
              "mask" : null,
              "next_state" : null
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_int_data"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["int_md", "countHeaders"]
            }
          ]
        },
        {
          "name" : "parse_int_data",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "stack",
                  "value" : "int_data"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._parser_metadata_numHeadersRemaining0"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata._parser_metadata_numHeadersRemaining0"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0000",
              "mask" : null,
              "next_state" : null
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_int_data"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._parser_metadata_numHeadersRemaining0"]
            }
          ]
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "P4/include/parsers.p4",
        "line" : 66,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "ipv4", "ipv4_option", "int_md", "int_data[0]", "int_data[1]", "int_data[2]", "int_data[3]"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "MyIngress.drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 17,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forward",
      "id" : 1,
      "runtime_data" : [
        {
          "name" : "egressPort",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 25,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = egressPort"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.populateSwitchInfo",
      "id" : 2,
      "runtime_data" : [
        {
          "name" : "switchId",
          "bitwidth" : 4
        },
        {
          "name" : "role",
          "bitwidth" : 2
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "meta.switch_metadata.switchId = (switch_id_t) switchId"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 47,
            "column" : 8,
            "source_fragment" : "meta.switch_metadata.switchINTRole = role"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.populateSwitchInfoDefault",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 52,
            "column" : 8,
            "source_fragment" : "meta.switch_metadata.switchId = (switch_id_t) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/constants.p4",
            "line" : 8,
            "column" : 16,
            "source_fragment" : "3 ..."
          }
        }
      ]
    },
    {
      "name" : "telemetry42",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "switchInfoTableKey_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 42,
            "column" : 4,
            "source_fragment" : "bit switchInfoTableKey = 0;"
          }
        }
      ]
    },
    {
      "name" : "telemetry77",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._sink_metadata_ingress_global_timestamp3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "meta.sink_metadata.ingress_global_timestamp = (ingress_global_time_t) standard_metadata.ingress_global_timestamp"
          }
        },
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 78,
            "column" : 12,
            "source_fragment" : "clone3(CloneType.I2E, SinkSessionID, meta)"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing22",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[NOTE] Source received non IPv4 packet."
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 22,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[NOTE] Source received non IPv4 packet.\\\");"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "sourceProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 23,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing16",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "sourceProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Source"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 16,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Source\\\");"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Egress port: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "egress_port"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 18,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Egress port: {}\\\", {standard_metadata.egress_port});"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing29",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[ERROR] Source encountered INT_MD header."
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 29,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Source encountered INT_MD header.\\\");"
          }
        },
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 30,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "sourceProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 31,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing42",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[ERROR] Source encountered existing IPv4 Options, dropping."
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 42,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Source encountered existing IPv4 Options, dropping.\\\");"
          }
        },
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 43,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing45",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "ipv4_option"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.ipv4_option.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "copied"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.ipv4_option.copied = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "class"]
            },
            {
              "type" : "hexstr",
              "value" : "0x02"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.ipv4_option.class = 2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "option"]
            },
            {
              "type" : "hexstr",
              "value" : "0x1f"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/headers.p4",
            "line" : 4,
            "column" : 31,
            "source_fragment" : "31; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "length"]
            },
            {
              "type" : "hexstr",
              "value" : "0x10"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.ipv4_option.length = 2 + INT_MD_Header_Size + INT_DATA_Size"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ihl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x04"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0f"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 57,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.ihl = hdr.ipv4.ihl + (bit<4>)((2 + INT_MD_Header_Size)>>2) + (bit<4>)(INT_DATA_Size >> 2)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen + 2 + (bit<16>)INT_MD_Header_Size + (bit<16>)INT_DATA_Size"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_md"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_md.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_md", "countHeaders"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0001"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_md.countHeaders = 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_md", "sourceIngressTime"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_md.sourceIngressTime = (ingress_global_time_t) standard_metadata.ingress_global_timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_data[0]"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_data[0].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_data[0]", "switchId"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 68,
            "column" : 12,
            "source_fragment" : "hdr.int_data[0].switchId = (switch_id_t) meta.switch_metadata.switchId; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_data[0]", "queueDepth"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "deq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0fff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_data[0].queueDepth = (queue_depth_t) standard_metadata.deq_qdepth"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_data[0]", "queueTime"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "deq_timedelta"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 70,
            "column" : 12,
            "source_fragment" : "hdr.int_data[0].queueTime = (queue_time_delta_t) standard_metadata.deq_timedelta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "deq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0fff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 69,
            "column" : 41,
            "source_fragment" : "(queue_depth_t) standard_metadata.deq_qdepth"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "deq_timedelta"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 70,
            "column" : 40,
            "source_fragment" : "(queue_time_delta_t) standard_metadata.deq_timedelta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 64,
            "column" : 43,
            "source_fragment" : "(ingress_global_time_t) standard_metadata.ingress_global_timestamp"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Switch: {}, Enq Depth: {}, QTime: {}, SourceITime: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_1"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_2"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"Switch: {}, Enq Depth: {}, QTime: {}, SourceITime: {}\\\", {hdr.int_data[0].switchId, hdr.int_data[0].queueDepth, hdr.int_data[0].queueTime, hdr.int_md.sourceIngressTime});"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing93",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[NOTE] Transit received non IPv4 packet."
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 93,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[NOTE] Transit received non IPv4 packet.\\\");"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "transitProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 94,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing89",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "transitProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Transit"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 89,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Transit\\\");"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing99",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[ERROR] Transit couldn't find INT_MD Header"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 99,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Transit couldn't find INT_MD Header\\\");"
          }
        },
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 100,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "transitProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 101,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing108",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[NOTE] Transit Maximum INT_DATA limit reached"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 108,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[NOTE] Transit Maximum INT_DATA limit reached\\\");"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "transitProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 109,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing104",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "transitProcessingInstance_numHeaders"]
            },
            {
              "type" : "field",
              "value" : ["int_md", "countHeaders"]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 104,
            "column" : 8,
            "source_fragment" : "header_count_t numHeaders = hdr.int_md.countHeaders;"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing113",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "length"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4_option", "length"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x04"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 113,
            "column" : 8,
            "source_fragment" : "hdr.ipv4_option.length = hdr.ipv4_option.length + INT_DATA_Size"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ihl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0f"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 114,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl = hdr.ipv4.ihl + (bit<4>)(INT_DATA_Size >> 2)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 115,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen + (bit<16>)INT_DATA_Size"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "dereference_header_stack",
                  "left" : {
                    "type" : "header_stack",
                    "value" : "int_data"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 118,
            "column" : 8,
            "source_fragment" : "hdr.int_data[numHeaders].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "access_field",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "dereference_header_stack",
                      "left" : {
                        "type" : "header_stack",
                        "value" : "int_data"
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                      }
                    }
                  },
                  "right" : 0
                }
              }
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 119,
            "column" : 8,
            "source_fragment" : "hdr.int_data[numHeaders].switchId = (switch_id_t) meta.switch_metadata.switchId; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "access_field",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "dereference_header_stack",
                      "left" : {
                        "type" : "header_stack",
                        "value" : "int_data"
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                      }
                    }
                  },
                  "right" : 1
                }
              }
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0fff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 120,
            "column" : 8,
            "source_fragment" : "hdr.int_data[numHeaders].queueDepth = (queue_depth_t) standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "access_field",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "dereference_header_stack",
                      "left" : {
                        "type" : "header_stack",
                        "value" : "int_data"
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                      }
                    }
                  },
                  "right" : 2
                }
              }
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "deq_timedelta"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 121,
            "column" : 8,
            "source_fragment" : "hdr.int_data[numHeaders].queueTime = (queue_time_delta_t) standard_metadata.deq_timedelta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_md", "countHeaders"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 123,
            "column" : 8,
            "source_fragment" : "hdr.int_md.countHeaders = numHeaders + 1"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Switch: {}, Enq Depth: {}, QTime: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "access_field",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "dereference_header_stack",
                          "left" : {
                            "type" : "header_stack",
                            "value" : "int_data"
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                          }
                        }
                      },
                      "right" : 0
                    }
                  }
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "access_field",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "dereference_header_stack",
                          "left" : {
                            "type" : "header_stack",
                            "value" : "int_data"
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                          }
                        }
                      },
                      "right" : 1
                    }
                  }
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "access_field",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "dereference_header_stack",
                          "left" : {
                            "type" : "header_stack",
                            "value" : "int_data"
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "transitProcessingInstance_numHeaders"]
                          }
                        }
                      },
                      "right" : 2
                    }
                  }
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 125,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Switch: {}, Enq Depth: {}, QTime: {}\\\", {hdr.int_data[numHeaders].switchId, hdr.int_data[numHeaders].queueDepth, hdr.int_data[numHeaders].queueTime});"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing141",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "[ERROR] Sink node couldn't find INT_MD Header"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 141,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Sink node couldn't find INT_MD Header\\\");"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "sinkProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 142,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing138",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "sinkProcessingInstance_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Sink"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Sink\\\");"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing146",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Num headers: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["int_md", "countHeaders"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 146,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Num headers: {}\\\", {numHeaders});"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Normal Packet Ingress Time: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 147,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Normal Packet Ingress Time: {}\\\", {standard_metadata.ingress_global_timestamp});"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x05"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 152,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl = 5"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4_option", "length"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 155,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen - (bit<16>)hdr.ipv4_option.length"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "ipv4_option"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 157,
            "column" : 8,
            "source_fragment" : "hdr.ipv4_option.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_md"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 158,
            "column" : 8,
            "source_fragment" : "hdr.int_md.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_data[0]"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 161,
            "column" : 8,
            "source_fragment" : "hdr.int_data[0].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_data[1]"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 162,
            "column" : 8,
            "source_fragment" : "hdr.int_data[1].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_data[2]"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 163,
            "column" : 8,
            "source_fragment" : "hdr.int_data[2].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_data[3]"
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 164,
            "column" : 8,
            "source_fragment" : "hdr.int_data[3].setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "telemetry105",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Switch ID: {}, SwitchRole: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._switch_metadata_switchId1"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 105,
            "column" : 16,
            "source_fragment" : "                log_msg(\\\"Switch ID: {}, SwitchRole: {}\\\", {meta.switch_metadata.switchId, meta.switch_metadata.switchINTRole});"
          }
        }
      ]
    },
    {
      "name" : "INTprocessing177",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_md", "sinkIngressTime"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "hdr.int_md.sinkIngressTime = (ingress_global_time_t) standard_metadata.egress_global_timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 177,
            "column" : 37,
            "source_fragment" : "(ingress_global_time_t) standard_metadata.egress_global_timestamp"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Clone Packet Egress Time: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_3"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Clone Packet Egress Time: {}\\\", {hdr.int_md.sinkIngressTime});"
          }
        }
      ]
    },
    {
      "name" : "telemetry127",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Received Ingress Cloned packet on role: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 127,
            "column" : 20,
            "source_fragment" : "                    log_msg(\\\"Received Ingress Cloned packet on role: {}\\\", {meta.switch_metadata.switchINTRole});"
          }
        },
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 129,
            "column" : 20,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "telemetry134",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Received packet with unexpected instance type: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "instance_type"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 134,
            "column" : 16,
            "source_fragment" : "                log_msg(\\\"Received packet with unexpected instance type: {}\\\", {standard_metadata.instance_type});"
          }
        },
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 135,
            "column" : 16,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "P4/telemetry.p4",
        "line" : 13,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "tbl_telemetry42",
      "tables" : [
        {
          "name" : "tbl_telemetry42",
          "id" : 0,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 42,
            "column" : 4,
            "source_fragment" : "bit switchInfoTableKey = 0;"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["telemetry42"],
          "base_default_next" : "MyIngress.SwitchInfo",
          "next_tables" : {
            "telemetry42" : "MyIngress.SwitchInfo"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.SwitchInfo",
          "id" : 1,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 56,
            "column" : 10,
            "source_fragment" : "SwitchInfo"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "switchInfoTableKey",
              "target" : ["scalars", "switchInfoTableKey_0"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2, 3],
          "actions" : ["MyIngress.populateSwitchInfo", "MyIngress.populateSwitchInfoDefault"],
          "base_default_next" : "MyIngress.ipv4forwarding",
          "next_tables" : {
            "MyIngress.populateSwitchInfo" : "MyIngress.ipv4forwarding",
            "MyIngress.populateSwitchInfoDefault" : "MyIngress.ipv4forwarding"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ipv4forwarding",
          "id" : 2,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 29,
            "column" : 10,
            "source_fragment" : "ipv4forwarding"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 256,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1, 0],
          "actions" : ["MyIngress.forward", "MyIngress.drop"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "MyIngress.forward" : "node_5",
            "MyIngress.drop" : "node_5"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_telemetry77",
          "id" : 3,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 77,
            "column" : 56,
            "source_fragment" : "= (ingress_global_time_t) standard_metadata.ingress_global_timestamp; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["telemetry77"],
          "base_default_next" : null,
          "next_tables" : {
            "telemetry77" : null
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_5",
          "id" : 0,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 76,
            "column" : 12,
            "source_fragment" : "meta.switch_metadata.switchINTRole == INTRole.Sink && hdr.int_md.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x02"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["int_md", "$valid$"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_telemetry77"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "P4/telemetry.p4",
        "line" : 83,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_9",
      "tables" : [
        {
          "name" : "tbl_telemetry105",
          "id" : 4,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 105,
            "column" : 16,
            "source_fragment" : "                log_msg(\\\"Switch ID: {}, SwitchRole: {}\\\", {meta.switch_metadata.switchId, meta.switch_metadata.switchINTRole});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["telemetry105"],
          "base_default_next" : "node_12",
          "next_tables" : {
            "telemetry105" : "node_12"
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing16",
          "id" : 5,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 16,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Source\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["INTprocessing16"],
          "base_default_next" : "node_14",
          "next_tables" : {
            "INTprocessing16" : "node_14"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing22",
          "id" : 6,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 22,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[NOTE] Source received non IPv4 packet.\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["INTprocessing22"],
          "base_default_next" : "node_16",
          "next_tables" : {
            "INTprocessing22" : "node_16"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing29",
          "id" : 7,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 29,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Source encountered INT_MD header.\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["INTprocessing29"],
          "base_default_next" : "node_19",
          "next_tables" : {
            "INTprocessing29" : "node_19"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing42",
          "id" : 8,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 42,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Source encountered existing IPv4 Options, dropping.\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["INTprocessing42"],
          "base_default_next" : null,
          "next_tables" : {
            "INTprocessing42" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing45",
          "id" : 9,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.ipv4_option.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["INTprocessing45"],
          "base_default_next" : null,
          "next_tables" : {
            "INTprocessing45" : null
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing89",
          "id" : 10,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 89,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Transit\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["INTprocessing89"],
          "base_default_next" : "node_25",
          "next_tables" : {
            "INTprocessing89" : "node_25"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing93",
          "id" : 11,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 93,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[NOTE] Transit received non IPv4 packet.\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["INTprocessing93"],
          "base_default_next" : "node_27",
          "next_tables" : {
            "INTprocessing93" : "node_27"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing99",
          "id" : 12,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 99,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Transit couldn't find INT_MD Header\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["INTprocessing99"],
          "base_default_next" : "node_30",
          "next_tables" : {
            "INTprocessing99" : "node_30"
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing104",
          "id" : 13,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 104,
            "column" : 8,
            "source_fragment" : "header_count_t numHeaders = hdr.int_md.countHeaders;"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["INTprocessing104"],
          "base_default_next" : "node_32",
          "next_tables" : {
            "INTprocessing104" : "node_32"
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing108",
          "id" : 14,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 108,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[NOTE] Transit Maximum INT_DATA limit reached\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["INTprocessing108"],
          "base_default_next" : "node_34",
          "next_tables" : {
            "INTprocessing108" : "node_34"
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing113",
          "id" : 15,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 113,
            "column" : 31,
            "source_fragment" : "= hdr.ipv4_option.length + INT_DATA_Size; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["INTprocessing113"],
          "base_default_next" : null,
          "next_tables" : {
            "INTprocessing113" : null
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing138",
          "id" : 16,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Sink\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["INTprocessing138"],
          "base_default_next" : "node_38",
          "next_tables" : {
            "INTprocessing138" : "node_38"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing141",
          "id" : 17,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 141,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"[ERROR] Sink node couldn't find INT_MD Header\\\");"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["INTprocessing141"],
          "base_default_next" : "node_40",
          "next_tables" : {
            "INTprocessing141" : "node_40"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing146",
          "id" : 18,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 146,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Num headers: {}\\\", {numHeaders});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19],
          "actions" : ["INTprocessing146"],
          "base_default_next" : null,
          "next_tables" : {
            "INTprocessing146" : null
          },
          "default_entry" : {
            "action_id" : 19,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_INTprocessing177",
          "id" : 19,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 177,
            "column" : 35,
            "source_fragment" : "= (ingress_global_time_t) standard_metadata.egress_global_timestamp; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["INTprocessing177"],
          "base_default_next" : null,
          "next_tables" : {
            "INTprocessing177" : null
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_telemetry127",
          "id" : 20,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 127,
            "column" : 20,
            "source_fragment" : "                    log_msg(\\\"Received Ingress Cloned packet on role: {}\\\", {meta.switch_metadata.switchINTRole});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["telemetry127"],
          "base_default_next" : null,
          "next_tables" : {
            "telemetry127" : null
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_telemetry134",
          "id" : 21,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 134,
            "column" : 16,
            "source_fragment" : "                log_msg(\\\"Received packet with unexpected instance type: {}\\\", {standard_metadata.instance_type});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["telemetry134"],
          "base_default_next" : null,
          "next_tables" : {
            "telemetry134" : null
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_9",
          "id" : 1,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 96,
            "column" : 11,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_10"
        },
        {
          "name" : "node_10",
          "id" : 2,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 98,
            "column" : 16,
            "source_fragment" : "standard_metadata.instance_type == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000000"
              }
            }
          },
          "true_next" : "tbl_telemetry105",
          "false_next" : "node_42"
        },
        {
          "name" : "node_12",
          "id" : 3,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 107,
            "column" : 20,
            "source_fragment" : "meta.switch_metadata.switchINTRole == INTRole.Source && standard_metadata.egress_port == INTSourceEgressPort"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0002"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing16",
          "false_next" : "node_23"
        },
        {
          "name" : "node_14",
          "id" : 4,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 21,
            "column" : 12,
            "source_fragment" : "!hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing22",
          "false_next" : "node_16"
        },
        {
          "name" : "node_16",
          "id" : 5,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "sourceProcessingInstance_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "node_17",
          "false_next" : "node_19"
        },
        {
          "name" : "node_17",
          "id" : 6,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 28,
            "column" : 12,
            "source_fragment" : "hdr.int_md.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["int_md", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_INTprocessing29",
          "false_next" : "node_19"
        },
        {
          "name" : "node_19",
          "id" : 7,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "sourceProcessingInstance_hasReturned"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_20"
        },
        {
          "name" : "node_20",
          "id" : 8,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 41,
            "column" : 12,
            "source_fragment" : "hdr.ipv4_option.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4_option", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_INTprocessing42",
          "false_next" : "tbl_INTprocessing45"
        },
        {
          "name" : "node_23",
          "id" : 9,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 110,
            "column" : 25,
            "source_fragment" : "meta.switch_metadata.switchINTRole == INTRole.Transit && standard_metadata.egress_port == INTTransitEgressPort"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0002"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing89",
          "false_next" : "node_36"
        },
        {
          "name" : "node_25",
          "id" : 10,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 92,
            "column" : 12,
            "source_fragment" : "!hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing93",
          "false_next" : "node_27"
        },
        {
          "name" : "node_27",
          "id" : 11,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "transitProcessingInstance_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "node_28",
          "false_next" : "node_30"
        },
        {
          "name" : "node_28",
          "id" : 12,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 98,
            "column" : 12,
            "source_fragment" : "!hdr.int_md.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["int_md", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing99",
          "false_next" : "node_30"
        },
        {
          "name" : "node_30",
          "id" : 13,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "transitProcessingInstance_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing104",
          "false_next" : "node_34"
        },
        {
          "name" : "node_32",
          "id" : 14,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 107,
            "column" : 12,
            "source_fragment" : "numHeaders == 4"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["int_md", "countHeaders"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0004"
              }
            }
          },
          "true_next" : "tbl_INTprocessing108",
          "false_next" : "node_34"
        },
        {
          "name" : "node_34",
          "id" : 15,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "transitProcessingInstance_hasReturned"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_INTprocessing113"
        },
        {
          "name" : "node_36",
          "id" : 16,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 115,
            "column" : 25,
            "source_fragment" : "meta.switch_metadata.switchINTRole == INTRole.Sink && standard_metadata.egress_port != INTSinkIngressPort"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x02"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0001"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_INTprocessing138"
        },
        {
          "name" : "node_38",
          "id" : 17,
          "source_info" : {
            "filename" : "P4/include/INTprocessing.p4",
            "line" : 140,
            "column" : 12,
            "source_fragment" : "!hdr.int_md.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["int_md", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_INTprocessing141",
          "false_next" : "node_40"
        },
        {
          "name" : "node_40",
          "id" : 18,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "sinkProcessingInstance_hasReturned"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_INTprocessing146"
        },
        {
          "name" : "node_42",
          "id" : 19,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 122,
            "column" : 21,
            "source_fragment" : "standard_metadata.instance_type == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000001"
              }
            }
          },
          "true_next" : "node_43",
          "false_next" : "tbl_telemetry134"
        },
        {
          "name" : "node_43",
          "id" : 20,
          "source_info" : {
            "filename" : "P4/telemetry.p4",
            "line" : 123,
            "column" : 20,
            "source_fragment" : "meta.switch_metadata.switchINTRole == INTRole.Sink"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata._switch_metadata_switchINTRole2"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x02"
              }
            }
          },
          "true_next" : "tbl_INTprocessing177",
          "false_next" : "tbl_telemetry127"
        }
      ]
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/home/kartik/SOPWork/INTv1/P4/telemetry.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}